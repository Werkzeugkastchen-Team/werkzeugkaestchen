<div class="alert alert-info">
    {{ _('Laden Sie ein Bild hoch und wählen Sie das gewünschte Zielformat aus. Unterstützte Formate sind: PNG, JPEG, GIF, BMP und WEBP.') }}
</div>

<div class="form-group">
    <label for="file">{{ _('Bild auswählen:') }}</label>
    <input type="file" name="file" id="file" class="form-control" accept="image/*" onchange="handleImageSelect(this)">
    <small class="form-text text-muted">{{ _('Unterstützte Formate: PNG, JPEG, GIF, BMP, WEBP') }}</small>
</div>

<div class="form-group target-format-group" style="display: none;">
    <label for="target_format">{{ _('Zielformat:') }}</label>
    <select name="target_format" id="target_format" class="form-control">
        <option value="" disabled selected>{{ _('Bitte wählen Sie ein Format') }}</option>
    </select>
</div>

<div id="progressContainer" style="display: none;">
    <div class="progress mt-3">
        <div class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar" style="width: 0%"></div>
    </div>
</div>

<input class="fancy-button mt-3" type="submit" value="{{ _('Ausführen') }}" id="submitButton">

<script>
function handleImageSelect(input) {
    if (input.files && input.files[0]) {
        const file = input.files[0];
        const format = file.name.split('.').pop().toUpperCase();
        const formatSelect = document.querySelector('select[name="target_format"]');
        const formatGroup = document.querySelector('.target-format-group');

        // Clear existing options
        formatSelect.innerHTML = '<option value="" disabled selected>{{ _("Bitte wählen Sie ein Format") }}</option>';

        // Add available formats except the current one
        const formats = ['PNG', 'JPEG', 'GIF', 'BMP', 'WEBP'];
        formats.forEach(fmt => {
            if (fmt !== format) {
                const option = document.createElement('option');
                option.value = fmt;
                option.textContent = fmt;
                formatSelect.appendChild(option);
            }
        });

        formatGroup.style.display = 'block';
    }
}

document.getElementById('toolForm').onsubmit = function () {
    document.getElementById('progressContainer').style.display = 'block';
    document.getElementById('submitButton').disabled = true;

    // Simulate progress
    let progress = 0;
    const progressBar = document.querySelector('.progress-bar');
    const interval = setInterval(() => {
        progress += 5;
        if (progress <= 90) {
            progressBar.style.width = progress + '%';
            progressBar.setAttribute('aria-valuenow', progress);
        }
    }, 100);

    return true;
};
</script>
